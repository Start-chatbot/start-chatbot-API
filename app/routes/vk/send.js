const config = require("config");
const api = require("vk-easy");

const mainKeyboard = JSON.stringify({
  one_time: false,
  buttons: [
    [
      {
        action: {
          type: "text",
          payload: '{"button": "1.2"}',
          label: "–ó–∞—á–µ–º –Ω—É–∂–µ–Ω —á–∞—Ç-–±–æ—Ç?"
        },
        color: "primary"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "1.3"}',
          label: "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç —á–∞—Ç-–±–æ—Ç?"
        },
        color: "default"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "1.4"}',
          label: "–î—Ä—É–≥–∏–µ —Å–æ—Ü. —Å–µ—Ç–∏."
        },
        color: "primary"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "1.5"}',
          label: "–ó–∞–∫–∞–∑–∞—Ç—å —á–∞—Ç-–±–æ—Ç."
        },
        color: "positive"
      }
    ]
  ]
});

const whyKeyboard = JSON.stringify({
  one_time: false,
  buttons: [
    [
      {
        action: {
          type: "text",
          payload: '{"button": "2.1"}',
          label: "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
        },
        color: "positive"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "2.2"}',
          label: "–ü—Ä–∞–π—Å-–ª–∏—Å—Ç"
        },
        color: "positive"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "2.25"}',
          label: "–†–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π."
        },
        color: "primary"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "2.4"}',
          label: "–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ"
        },
        color: "positive"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "2.5"}',
          label: "–ù–∞ –≥–ª–∞–≤–Ω—É—é."
        },
        color: "default"
      }
    ]
  ]
});

const priceKeyboard = JSON.stringify({
  one_time: false,
  buttons: [
    [
      {
        action: {
          type: "text",
          payload: '{"button": "4.1"}',
          label: "–¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã"
        },
        color: "primary"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "4.2"}',
          label: "–ö–Ω–æ–ø–∫–∏"
        },
        color: "primary"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "4.3"}',
          label: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –í–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–∞–º"
        },
        color: "primary"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "4.4"}',
          label: "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"
        },
        color: "primary"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "4.5"}',
          label: "–ò –¥—Ä—É–≥–æ–µ"
        },
        color: "primary"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "3.2"}',
          label: "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
        },
        color: "default"
      }
    ]
  ]
});

const buyKeyboard = JSON.stringify({
  one_time: false,
  buttons: [
    [
      {
        action: {
          type: "text",
          payload: '{"button": "3.1"}',
          label: "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É."
        },
        color: "positive"
      }
    ],
    [
      {
        action: {
          type: "text",
          payload: '{"button": "3.2"}',
          label: "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
        },
        color: "default"
      }
    ]
  ]
});

module.exports = (userId, message, button) => {
  switch (button) {
    case 1.2:
      send(
        userId,
        "–£ –±–æ—Ç–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ.üôÇ",
        whyKeyboard
      );
      break;

    case 1.3:
      send(
        userId,
        "–¶–µ–Ω–∞ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —á–∞—Ç-–±–æ—Ç–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. \n\n" +
          "–ß—Ç–æ–±—ã —Ä–∞—Å—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –±—ã–ª –±—ã—Å—Ç—Ä–µ–µ –∏ —Ç–æ—á–Ω–µ–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ," +
          "–∫–æ—Ç–æ—Ä–æ–µ –æ–ø–∏—à–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –í–∞–º —á–∞—Ç-–±–æ—Ç–∞.\n\n" +
          "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –æ—Ç —á–µ–≥–æ –∑–∞–≤–∏—Å–∏—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ üôÇ",
        priceKeyboard
      );
      break;

    case 1.4:
      send(
        userId,
        "–ú—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–µ–º —á–∞—Ç-–±–æ—Ç –¥–ª—è VK , Facebook –∏ Telegramm , –∞ —Ç–∞–∫ –∂–µ –¥–ª—è –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –≤–∞—Å —Å–æ—Ü. —Å–µ—Ç–∏.\n\n" +
          "–°–µ–π—á–∞—Å –º—ã –≤–µ–¥–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –Ω–∞—à–µ–≥–æ —á–∞—Ç-–±–æ—Ç–∞ –≤ Facebook , —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–µ—Ç —ç—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞.\n\n" +
          "–ö–∞–∂–¥–∞—è —Å–æ—Ü. —Å–µ—Ç—å –ø–æ-—Å–≤–æ–µ–º—É —É–Ω–∏–∫–∞–ª—å–Ω–∞ –∏ –Ω–∞—Ü–µ–ª–µ–Ω–∞ –Ω–∞ —Å–≤–æ—é –∞—É–¥–∏—Ç–æ—Ä–∏—é üôÇ",
        mainKeyboard
      );
      break;

    case 1.5:
      send(
        userId,
        "–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —á–∞—Ç-–±–æ—Ç , –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.' –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ üôÇ",
        buyKeyboard
      );
      break;

    case 2.1:
      send(
        userId,
        "–ò–∑–±–∞–≤—å—Ç–µ—Å—å –æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤.\n\n" +
          "–û—Ñ–æ—Ä–º–∏—Ç–µ —á–∞—Å—Ç–æ–∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –∫–Ω–æ–ø–∫–∏ —á–∞—Ç-–±–æ—Ç–∞.\n\n" +
          "–ß–∞—Ç-–±–æ—Ç –Ω–µ —Å–æ–≤–µ—Ä—à–∏—Ç –æ—à–∏–±–∫—É –∏ –≤—Å–µ–º –æ—Ç–≤–µ—Ç–∏—Ç –∏–º–µ–Ω–Ω–æ —Ç–∞–∫, –∫–∞–∫ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ –Ω—É–∂–Ω—ã–º. üôÇ",
        whyKeyboard
      );
      break;

    case 2.2:
      send(
        userId,
        "–°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –≤ –í–∞—à–µ–º —á–∞—Ç-–±–æ—Ç–µ.\n\n" +
          "–†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã –∏–ª–∏ —É—Å–ª—É–≥–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö —á–∞—Ç-–±–æ—Ç–∞ –∏ —Å–æ–æ–±—â–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –Ω–∏—Ö. üôÇ",
        whyKeyboard
      );
      break;

    case 2.25:
      send(
        userId,
        "–û–ø–æ–≤–µ—â–∞–π—Ç–µ —Å–≤–æ–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –æ –Ω–æ–≤–æ—Å—Ç—è—Ö, –∞–∫—Ü–∏—è—Ö –∏ –ª—é–±–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n" +
          "–° –ø–æ–º–æ—â—å—é —á–∞—Ç-–±–æ—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å—Ä–∞–∑—É –≤—Å–µ–º –í–∞—à–∏–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º. üôÇ",
        whyKeyboard
      );
      break;

    case 2.4:
      send(
        userId,
        "–£ —á–∞—Ç-–±–æ—Ç–æ–≤ –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π, —á–µ–º –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è.\n\n" +
          "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —á–∞—Ç-–±–æ—Ç–æ–≤ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∞—à–∏–º –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º. üôÇ\n\n",
        whyKeyboard
      );
      break;

    case 3.1:
      send(80427018, "–∑–∞—è–≤–∫–∞ –æ—Ç https://vk.com/id" + userId, mainKeyboard);
      send(userId, "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ üôÇ \n\n–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", mainKeyboard);
      break;

    case 3.2:
    case 2.5:
      send(userId, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", mainKeyboard);
      break;

    case 4.1:
      send(
        userId,
        "–¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã - —ç—Ç–æ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, –ø–æ–ª—É—á–∏–≤ –∫–æ—Ç–æ—Ä—ã–µ –í–∞—à —á–∞—Ç-–±–æ—Ç –±—É–¥–µ—Ç —Å–æ–≤–µ—Ä—à–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–µ –¥–µ–π—Å—Ç–≤–∏—è. \n\n" +
          "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∫–æ–º–∞–Ω–¥ –∏ –æ–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–µ–Ω —Å–æ–≤–µ—Ä—à–∞—Ç—å —á–∞—Ç-–±–æ—Ç —è–≤–ª—è—é—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑—É—é—â–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤. üôÇ",
        priceKeyboard
      );
      break;

    case 4.2:
      send(
        userId,
        "–ö–Ω–æ–ø–∫–∏ - –∫—Ä–∞–π–Ω–µ —É–¥–æ–±–Ω–æ–µ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç-–±–æ—Ç–æ–≤ –≤–∫–æ–Ω—Ç–∞–∫—Ç–µ.\n\n" +
          "–ü–æ —Å—É—Ç–∏ –∫–Ω–æ–ø–∫–∏ - —ç—Ç–æ —Ç–µ –∂–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–µ –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–º –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–º –æ–±—Ä–∞–∑–æ–º. üôÇ",
        priceKeyboard
      );
      break;

    case 4.3:
      send(
        userId,
        "–ï—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å —Å–≤–æ–∏ –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å—ã, —Å–∞–π—Ç—ã, –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∫ –Ω–∏–º –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —á–∞—Ç-–±–æ—Ç–µ.\n\n" +
          "–ù–∞–ø—Ä–º–µ—Ä, –µ—Å–ª–∏ —É –í–∞—Å –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å–æ —Å–ø–∏—Å–∫–æ–º —Ç–æ–≤–∞—Ä–æ–≤, –º–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –≤ —á–∞—Ç-–±–æ—Ç–µ —Å —Ü–µ–Ω–∞–º–∏ –∏ —Å–∫–∏–¥–∫–∞–º–∏. üôÇ",
        priceKeyboard
      );
      break;

    case 4.4:
      send(
        userId,
        "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º —Å–µ—Ä–≤–∏—Å–∞–º, –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ " +
          "–ª—é–±—ã–µ –≤—Ä–µ–º—è–∑–∞—Ç—Ä–∞—Ç–Ω—ã–µ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è —Ç–∞–∫ –∂–µ —è–≤–ª—è—é—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑—É—é—â–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. üôÇ",
        priceKeyboard
      );
      break;

    case 4.5:
      send(
        userId,
        "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —á–∞—Ç-–±–æ—Ç–∞ –±–µ–∑–≥—Ä–∞–Ω–∏—á–µ–Ω –∏ –º–æ–∂–µ—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç—å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –ª—é–±–æ–≥–æ –±–∏–∑–Ω–µ—Å—Å–∞. \n\n" +
          "–ß–∞—Ç-–±–æ—Ç - —ç—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ —Ç—Ä–µ–±–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –∫ —Ç–æ—á–Ω–æ–π –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–¥–∞—á.üôÇ\n\n" +
          "–ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Ö–æ—Ä–æ—à–æ –æ—Å–æ–∑–Ω–∞—Ç—å –∏ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤–∞—à–µ–º—É —á–∞—Ç-–±–æ—Ç—É –∏ –æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª–Ω–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ. üôÇ",
        priceKeyboard
      );
      break;

    case 0:
      send(userId, "–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ üôÇ", mainKeyboard);
      break;
  }

  function send(userId, message, keyboard) {
    api("messages.send", {
      user_id: userId,
      message: message,
      access_token: config.vk.access_token,
      keyboard
    });
  }
};
